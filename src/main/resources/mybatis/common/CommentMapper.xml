<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.common.dao.CommentDao">

    <select id="get" resultType="com.bootdo.common.domain.CommentDO">
		select `id`,`user_id`,`file_id`,`content`, `create_time` from
		sys_comment
		where id =
		#{value}
	</select>

    <select id="list" resultType="com.bootdo.common.domain.CommentDO">
        select `id`,`user_id`,`file_id`,`content`, `create_time` from
        sys_comment
        <where>
            <if test="id != null and id != ''">and id = #{id}</if>
            <if test="userId != null and userId != ''">and user_id = #{userId}</if>
            <if test="fileId != null and fileId != ''">and file_id = #{fileId}</if>
            <if test="createTime != null and createTime != ''">and create_time = #{createTime}</if>
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="count" resultType="int">
        select count(*) from sys_comment
        <where>
            <if test="id != null and id != ''">and id = #{id}</if>
            <if test="userId != null and userId != ''">and user_id = #{userId}</if>
            <if test="fileId != null and fileId != ''">and file_id = #{fileId}</if>
            <if test="createTime != null and createTime != ''">and create_time = #{createTime}</if>
        </where>
    </select>

    <insert id="save" parameterType="com.bootdo.common.domain.CommentDO" useGeneratedKeys="true" keyProperty="id">
		insert into sys_comment
		(
			`user_id`,
			`file_id`,
			`create_time`,
			`content`
		)
		values
		(
			#{userId},
			#{fileId},
			#{createTime},
			#{content}
		)
	</insert>

    <update id="update" parameterType="com.bootdo.common.domain.CommentDO">
        update sys_comment
        <set>
            <if test="userId != null">`user_id` = #{userId},</if>
            <if test="fileId != null">`file_id` = #{fileId},</if>
            <if test="createTime != null">`create_time` = #{createTime}</if>
            <if test="content != null">`content` = #{content}</if>
        </set>
        where id = #{id}
    </update>


    <delete id="remove">
		delete from sys_comment where id = #{value}
	</delete>

    <delete id="batchRemove">
        delete from sys_comment where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>


    <select id="listCommentRelation" resultType="com.bootdo.common.domain.CommentRelation">
        select c.*,f.url as file_url,f.type as file_type,u.name as user_name
        from
        sys_comment c, sys_file f,sys_user u
        <where>
            c.file_id=f.id
            and c.user_id=u.user_id
            <if test="id != null and id != ''">and id = #{id}</if>
            <if test="userId != null and userId != ''">and c.user_id =
                #{userId}</if>
            <if test="fileId != null and fileId != ''">and c.file_id =
                #{fileId}</if>
            <if test="createTime != null and createTime != ''">and
                c.create_time = #{createTime}</if>
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>


</mapper>